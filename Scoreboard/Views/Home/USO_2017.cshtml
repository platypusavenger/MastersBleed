@{
    ViewBag.Title = "US Open Scoreboard";
}
@Styles.Render("~/Content/css")
<style>
    body {
        background: url(../images/chambersbay.jpg) center center no-repeat fixed;
        background-size: cover;
    }

    .nav_usopen a {
        background-color: #ddd;
    }
</style>
<script>

    var config = {
        location: {
            address: '1233 Hulton Rd, Oakmont, PA 15139',
            lat: '40.524557',
            lng: '-79.828234'
        },
        backgrounds: {
            default: 'oakmont.jpg',
            raining: 'oakmont.jpg'
        }
    };

    var base_url = '/Scoreboard';
    if (window.location.hostname == 'localhost')
        base_url = '';

    angular.module('scoreboardApp', []).controller('ScoreboardCtrl', function ($scope, $http) {
        $scope.showPlayerRankings = false;
        $scope.refresh = 30;
        $scope.personPredicate = 'score';
        $scope.personReverse = false;
        $scope.pickPredicate = 'scoreKey';
        $scope.pickReverse = false;
        $scope.playerPredicate = 'scoreKey';
        $scope.playerReverse = false;
        $scope.cutLine = 'E';
        $scope.cutPenalty = 'E';
        $scope.totalScore = 0;
        $scope.avgScore = 0;
        $scope.showPenalty = false;

        $scope.scores = {};
        $scope.scoreCache = {};

        $scope.jeremyL = {
            'name': 'Jeremy Lizza',
            'score': 0,
            'expanded': true, 
            'picks': [
                { 'id': '28089', 'tier': 'A' },
                { 'id': '32102', 'tier': 'A' },
                { 'id': '21209', 'tier': 'B' },
                { 'id': '36689', 'tier': 'B' },
                { 'id': '06527', 'tier': 'C' },
                { 'id': '12716', 'tier': 'C' },
                { 'id': '26499', 'tier': 'C' },
                { 'id': '31323', 'tier': 'D' },
                { 'id': '47959', 'tier': 'D' },
                { 'id': '34409', 'tier': 'D' },
                { 'id': '22000', 'tier': 'D' },
                { 'id': '29531', 'tier': 'E' }
            ]
        };

        $scope.briano = {
            'name': "Brian O'Connor",
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '30925', 'tier': 'A' },
                { 'id': '34046', 'tier': 'A' },
                { 'id': '32839', 'tier': 'B' },
                { 'id': '21209', 'tier': 'B' },
                { 'id': '27649', 'tier': 'C' },
                { 'id': '40026', 'tier': 'C' },
                { 'id': '33204', 'tier': 'C' },
                { 'id': '29518', 'tier': 'D' },
                { 'id': '25834', 'tier': 'D' },
                { 'id': '25572', 'tier': 'D' },
                { 'id': '25396', 'tier': 'D' },
                { 'id': '34709', 'tier': 'E' }
            ]
        };

        $scope.robe = {
            'name': 'Rob Eble',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '28237', 'tier': 'A' },
                { 'id': '46970', 'tier': 'A' },
                { 'id': '22405', 'tier': 'B' },
                { 'id': '33448', 'tier': 'B' },
                { 'id': '40026', 'tier': 'C' },
                { 'id': '27141', 'tier': 'C' },
                { 'id': '29221', 'tier': 'C' },
                { 'id': '27644', 'tier': 'D' },
                { 'id': '48084', 'tier': 'D' },
                { 'id': '25572', 'tier': 'D' },
                { 'id': '1', 'tier': 'D' },
                { 'id': '32200', 'tier': 'E' }
            ]
        };

        $scope.shanks = {
            'name': 'Scott Hankinson',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '30925', 'tier': 'A' },
                { 'id': '28089', 'tier': 'A' },
                { 'id': '32839', 'tier': 'B' },
                { 'id': '21528', 'tier': 'B' },
                { 'id': '40026', 'tier': 'C' },
                { 'id': '25198', 'tier': 'C' },
                { 'id': '26499', 'tier': 'C' },
                { 'id': '31323', 'tier': 'D' },
                { 'id': '24361', 'tier': 'D' },
                { 'id': '48084', 'tier': 'D' },
                { 'id': '21498', 'tier': 'D' },
                { 'id': '23821', 'tier': 'E' }
            ]
        };

        $scope.brad = {
            'name': 'Brad Roller',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '30925', 'tier': 'A' },
                { 'id': '34046', 'tier': 'A' },
                { 'id': '32839', 'tier': 'B' },
                { 'id': '22405', 'tier': 'B' },
                { 'id': '27649', 'tier': 'C' },
                { 'id': '29420', 'tier': 'C' },
                { 'id': '25632', 'tier': 'C' },
                { 'id': '29518', 'tier': 'D' },
                { 'id': '31323', 'tier': 'D' },
                { 'id': '47959', 'tier': 'D' },
                { 'id': '25396', 'tier': 'D' },
                { 'id': '32200', 'tier': 'E' }
            ]
        };

        $scope.trevor = {
            'name': 'Trevor Corcoran',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '30925', 'tier': 'A' },
                { 'id': '28237', 'tier': 'A' },
                { 'id': '21209', 'tier': 'B' },
                { 'id': '24502', 'tier': 'B' },
                { 'id': '27649', 'tier': 'C' },
                { 'id': '20396', 'tier': 'C' },
                { 'id': '30911', 'tier': 'C' },
                { 'id': '24361', 'tier': 'D' },
                { 'id': '47959', 'tier': 'D' },
                { 'id': '25818', 'tier': 'D' },
                { 'id': '34409', 'tier': 'D' },
                { 'id': '29531', 'tier': 'E' }
            ]
        };

        $scope.carlN = {
            'name': 'Carl Newton',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '30925', 'tier': 'A' },
                { 'id': '28237', 'tier': 'A' },
                { 'id': '24502', 'tier': 'B' },
                { 'id': '33293', 'tier': 'B' },
                { 'id': '20396', 'tier': 'C' },
                { 'id': '06527', 'tier': 'C' },
                { 'id': '26499', 'tier': 'C' },
                { 'id': '31323', 'tier': 'D' },
                { 'id': '24361', 'tier': 'D' },
                { 'id': '25572', 'tier': 'D' },
                { 'id': '22000', 'tier': 'D' },
                { 'id': '24461', 'tier': 'E' }
            ]
        };

        $scope.craig = {
            'name': 'Craig Marmon',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '28089', 'tier': 'A' },
                { 'id': '32102', 'tier': 'A' },
                { 'id': '22405', 'tier': 'B' },
                { 'id': '33448', 'tier': 'B' },
                { 'id': '40026', 'tier': 'C' },
                { 'id': '29420', 'tier': 'C' },
                { 'id': '27141', 'tier': 'C' },
                { 'id': '31323', 'tier': 'D' },
                { 'id': '24361', 'tier': 'D' },
                { 'id': '48084', 'tier': 'D' },
                { 'id': '25818', 'tier': 'D' },
                { 'id': '20848', 'tier': 'E' }
            ]
        };

        $scope.basil = {
            'name': 'Basil Udoudoh',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '28237', 'tier': 'A' },
                { 'id': '28089', 'tier': 'A' },
                { 'id': '21528', 'tier': 'B' },
                { 'id': '23108', 'tier': 'B' },
                { 'id': '27649', 'tier': 'C' },
                { 'id': '25198', 'tier': 'C' },
                { 'id': '25632', 'tier': 'C' },
                { 'id': '29518', 'tier': 'D' },
                { 'id': '31323', 'tier': 'D' },
                { 'id': '24361', 'tier': 'D' },
                { 'id': '25396', 'tier': 'D' },
                { 'id': '34709', 'tier': 'E' }
            ]
        };

        
        $scope.shenanigans = [$scope.basil, $scope.brad, $scope.briano, $scope.shanks, $scope.carlN, $scope.trevor, $scope.jeremyL, $scope.robe, $scope.craig];

        // US Open uses a different data provider -- scrub it to one we know how to work with
        function scrubOpenData(scores) {
            var result = {};
            result.homeScores = {};
            result.homeScores.round = scores.currentRound.name;
            result.homeScores.player = [];
            var lastPos = scores.standings[0].position.displayValue;
            for (var i = 0; i < scores.standings.length; i++) {
                var newPlayer = {};
                newPlayer.isCut = false;
                newPlayer.pos = scores.standings[i].position.displayValue;
                if (newPlayer.pos == 'CUT' || newPlayer.pos == 'WD') {
                    newPlayer.pos = "" + scores.standings[i].position.value;
                    newPlayer.isCut = true;
                }

                newPlayer.dName = scores.standings[i].player.lastName + ", " + scores.standings[i].player.firstName;
                newPlayer.fName = scores.standings[i].player.firstName;
                newPlayer.lName = scores.standings[i].player.lastName;
                newPlayer.id = scores.standings[i].player.identifier;
                newPlayer.score = scores.standings[i].toPar.displayValue;
                newPlayer.today = scores.standings[i].toParToday.displayValue;
                newPlayer.thru = scores.standings[i].holesThrough.displayValue;
                //time zones!
                /*
                if (newPlayer.thru.indexOf(":") != -1) {
                    var hh = newPlayer.thru.substring(0, 2) - 5;
                    hh = "" + hh;
                    var mm = newPlayer.thru.substring(3);
                    if (hh.length == 1) {
                        hh = "0" + hh;
                    }
                    newPlayer.thru = hh.concat(":").concat(mm);
                }
                */
                newPlayer.order = scores.standings[i].roundScores[0].score.value + "|"
                    + scores.standings[i].roundScores[1].score.value;
                // + "|"
                //    + scores.standings[i].roundScores[2].score.value + "|"
                //    + scores.standings[i].roundScores[3].score.value;
                newPlayer.live = "f";

                if (newPlayer.score == "PAR")
                    newPlayer.score = "E";
                if (newPlayer.total == "PAR")
                    newPlayer.total = "E";
                if (newPlayer.today == "PAR")
                    newPlayer.today = "E";

                result.homeScores.player.push(newPlayer);
            }
            return result;
        };

        $scope.scoresCallback = function (scores) {
            var fixedScores = scrubOpenData(scores);
            $scope.scores = fixedScores.homeScores;
            $scope.cutLine = '+7';
            $scope.cutPenalty = '+9';
            $scope.totalScore = 0;
            $scope.avgScore = 0;

            // Penalty is based on the 40th percentile score
            var penalizedPosition = Math.ceil($scope.scores.player.length * .4);

            $scope.cutLine = "7";
            $scope.cutPenalty = "+9"

            // Add data to each player for who has picked them
            for (var i = 0; i < $scope.scores.player.length; i++) {

                var position = $scope.scores.player[i].pos;
                if (position.substring(0, 1) == 'T')
                    position = parseInt(position.substring(1, position.length));

                // US Open :  Cut > 60th 
                //if (position <= 60)
                //    $scope.cutLine = $scope.getScoreNumber($scope.scores.player[i].score);

                //if (position > penalizedPosition && $scope.cutPenalty == '')
                //    $scope.cutPenalty = $scope.scores.player[i].score;

                $scope.scores.player[i].pickedBy = "";
                $scope.scores.player[i].scoreKey = $scope.getScoreNumber($scope.scores.player[i].score);
                $scope.scores.player[i].todayKey = $scope.getScoreNumber($scope.scores.player[i].today);
                if (typeof $scope.scoreCache[$scope.scores.player[i].id] == 'undefined')
                    $scope.scores.player[i].status = 'scoreHold';
                else
                    $scope.scores.player[i].status = $scope.scoreCache[$scope.scores.player[i].id].status;
            }

            // Add a projected cut penalty
            for (var i = 0; i < $scope.scores.player.length; i++) {
                var position = $scope.scores.player[i].pos;
                if (position.substring(0, 1) == 'T')
                    position = parseInt(position.substring(1, position.length));
            
                if (position == 'MC' || position == 'WD' || $scope.scores.player[i].thru == 'WD')
                    $scope.scores.player[i].cutPenalty = 2 * $scope.getScoreNumber($scope.cutPenalty);
                else if (position == 1) {
                    $scope.scores.player[i].cutPenalty = (2 * $scope.getScoreNumber($scope.cutPenalty)) * -1
                }
                else
                    $scope.scores.player[i].cutPenalty = '';

                $scope.totalScore += $scope.getScoreNumber($scope.scores.player[i].score);
            }

            $scope.avgScore = Math.ceil($scope.totalScore / ($scope.scores.player.length));

            for (var i = 0; i < $scope.shenanigans.length; i++) {
                var currentPerson = $scope.shenanigans[i];
                currentPerson.score = 0;
                currentPerson.base = 0;
                currentPerson.cutPenalty = 0;
                currentPerson.cutPlayers = 0;
                for (var j = 0; j < currentPerson.picks.length; j++) {
                    var currentPlayer = currentPerson.picks[j];
                    var info = $scope.matchPlayerInfo(currentPlayer.id, currentPerson.name);
                    currentPlayer.pos = info.pos;
                    currentPlayer.name = info.fName + ' ' + info.lName;
                    currentPlayer.score = info.score;
                    currentPlayer.today = info.today;
                    currentPlayer.thru = info.thru;
                    currentPlayer.status = info.status;
                    currentPlayer.cutPenalty = info.cutPenalty;
                    currentPlayer.scoreKey = $scope.getScoreNumber(info.score);
                    if (info.cutPenalty != '') {
                        currentPerson.cutPenalty += info.cutPenalty;
                        currentPerson.cutPlayers += 1;
                    }
                    var todayString = 'E';
                    if (currentPlayer.pos == 'WD') {
                        currentPlayer.thru = 'WD';
                        currentPlayer.today = 'WD';
                    }
                    if (currentPlayer.today == 'E' || currentPlayer.today.substring(0, 1) == '+' || currentPlayer.today.substring(0, 1) == '-') {
                        todayString = currentPlayer.today;
                    }
                    if (currentPlayer.score == 'E' || currentPlayer.score.substring(0, 1) == '+' || currentPlayer.score.substring(0, 1) == '-') {
                        currentPlayer.todayKey = $scope.getScoreNumber(todayString);
                        currentPerson.score += $scope.getScoreNumber(info.score);
                        currentPerson.base += (currentPlayer.scoreKey - currentPlayer.todayKey);
                    }

                    if (typeof $scope.scoreCache[info.id] == 'undefined') {
                        $scope.scoreCache[info.id] = { 'thru': info.thru, 'score': info.scoreKey, 'status': 'scoreHold' };
                    } else {
                        var cache = $scope.scoreCache[info.id];
                        if (info.thru != cache.thru) {
                            if (info.scoreKey > cache.score) {
                                cache.status = 'scoreIncrease';
                            } else if (info.scoreKey < cache.score) {
                                cache.status = 'scoreDecrease';
                            } else {
                                cache.status = 'scoreHold';
                            }
                            cache.thru = info.thru;
                            cache.score = info.scoreKey;
                        }
                    }
                }
                if ($scope.showPenalty) {
                    currentPerson.score += currentPerson.cutPenalty;
                }
            }

        };

        $scope.getDelta = function (person) {
            var delta = person.score - person.base;
            if ($scope.showPenalty)
                delta = delta - person.cutPenalty;
            var value = "";
            if (delta > 0)
                value = "+" + delta;
            else if (delta == 0)
                value = "E";
            else
                value = delta;

            return value;
        };

        $scope.setExpanded = function (value) {
            for (var i = 0; i < $scope.shenanigans.length; i++)
                $scope.shenanigans[i].expanded = value;
        };

        $scope.getScoreNumber = function (scoreString) {
            if (scoreString == 'E' || scoreString == '')
                return 0;
            else
                return parseInt(scoreString);
        };

        $scope.matchPlayerInfo = function (id, pickedBy) {
            for (var i = 0; i < $scope.scores.player.length; i++) {
                if (id == $scope.scores.player[i].id) {
                    if ($scope.scores.player[i].pickedBy.indexOf(pickedBy) == -1) {
                        if ($scope.scores.player[i].pickedBy.length > 0)
                            $scope.scores.player[i].pickedBy += ", ";
                        $scope.scores.player[i].pickedBy += pickedBy;
                    }

                    var result = $scope.scores.player[i];
                    if (result.score == '')
                        result.scoreKey = 0;
                    if (result.thru == '')
                        result.thruKey = 0;

                    return result;
                }
            }

            return { name: '', score: '', thru: '', today: '', status: 'scoreHold' };
        };

        $scope.loadData = function () {
            $http.get(base_url + '/api/scoreboard/usopen/2017').success($scope.scoresCallback);
        };

        $scope.refreshingIn = function () {
            if ($scope.refresh == 0) {
                $scope.refresh = 30;
                $scope.loadData();
            } else
                $scope.refresh = $scope.refresh - 1;

            $scope.$apply($scope.refresh);
        };

        $scope.setPlayerSort = function (sort) {
            if (sort == 'default') {
                $scope.playerReverse = false;
                $scope.playerPredicate = 'scoreKey';
            } else if (sort == $scope.playerPredicate) {
                $scope.playerReverse = !$scope.playerReverse;
            } else {
                $scope.playerReverse = false;
                $scope.playerPredicate = sort;
            }
        };

        $scope.loadData();

        setInterval($scope.refreshingIn, 1000);
    });


    </script>

