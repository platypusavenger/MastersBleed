@{
    ViewBag.Title = "British Open Scoreboard";
}

<script>
    var base_url = '/Scoreboard';
    if (window.location.hostname == 'localhost')
        base_url = '';

    angular.module('scoreboardApp', []).controller('ScoreboardCtrl', function ($scope, $http) {
        $scope.showPlayerRankings = false;
        $scope.refresh = 30;
        $scope.personPredicate = 'score';
        $scope.personReverse = false;
        $scope.pickPredicate = 'scoreKey';
        $scope.pickReverse = false;
        $scope.playerPredicate = 'scoreKey';
        $scope.playerReverse = false;
        $scope.cutLine = 'E';
        $scope.cutPenalty = 'E';
        $scope.totalScore = 0;
        $scope.avgScore = 0;

        $scope.scores = {};
        $scope.scoreCache = {};

        $scope.jeremyL = {
            'name': 'Jeremy Lizza',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '8929', 'tier': 'A' },
                { 'id': '97088', 'tier': 'B' },
                { 'id': '128690', 'tier': 'B' },
                { 'id': '7389', 'tier': 'C' },
                { 'id': '14762', 'tier': 'C' },
                { 'id': '6674', 'tier': 'C' },
                { 'id': '97338', 'tier': 'D' },
                { 'id': '7238', 'tier': 'D' },
                { 'id': '131384', 'tier': 'D' },
                { 'id': '103178', 'tier': 'D' }
            ]
        };

        $scope.basilU = {
            'name': 'Basil Udoudoh',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '73414', 'tier': 'A' },
                { 'id': '100605', 'tier': 'B' },
                { 'id': '96793', 'tier': 'B' },
                { 'id': '7389', 'tier': 'C' },
                { 'id': '73334', 'tier': 'C' },
                { 'id': '128681', 'tier': 'C' },
                { 'id': '98494', 'tier': 'D' },
                { 'id': '95683', 'tier': 'D' },
                { 'id': '73646', 'tier': 'D' },
                { 'id': '128671', 'tier': 'D' }
            ]
        };

        $scope.bradR = {
            'name': 'Brad Roller',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '7371', 'tier': 'A' },
                { 'id': '8576', 'tier': 'B' },
                { 'id': '7230', 'tier': 'B' },
                { 'id': '6569', 'tier': 'C' },
                { 'id': '16115', 'tier': 'C' },
                { 'id': '105958', 'tier': 'C' },
                { 'id': '128684', 'tier': 'D' },
                { 'id': '102871', 'tier': 'D' },
                { 'id': '73565', 'tier': 'D' },
                { 'id': '66072', 'tier': 'D' }
            ]
        };

        $scope.scottH = {
            'name': 'Scott Hankinson',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '47568', 'tier': 'A' },
                { 'id': '6575', 'tier': 'B' },
                { 'id': '100604', 'tier': 'B' },
                { 'id': '7389', 'tier': 'C' },
                { 'id': '6569', 'tier': 'C' },
                { 'id': '8969', 'tier': 'C' },
                { 'id': '73646', 'tier': 'D' },
                { 'id': '7238', 'tier': 'D' },
                { 'id': '131384', 'tier': 'D' },
                { 'id': '102861', 'tier': 'D' }
            ]
        };

        $scope.douglasB = {
            'name': 'Douglas Borenstein',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '7145', 'tier': 'A' },
                { 'id': '97088', 'tier': 'B' },
                { 'id': '6575', 'tier': 'B' },
                { 'id': '100576', 'tier': 'C' },
                { 'id': '16115', 'tier': 'C' },
                { 'id': '14762', 'tier': 'C' },
                { 'id': '128684', 'tier': 'D' },
                { 'id': '102871', 'tier': 'D' },
                { 'id': '6619', 'tier': 'D' },
                { 'id': '7161', 'tier': 'D' }
            ]
        };

        $scope.brianO = {
            'name': "Brian O'Connor",
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '7371', 'tier': 'A' },
                { 'id': '98491', 'tier': 'B' },
                { 'id': '7230', 'tier': 'B' },
                { 'id': '100576', 'tier': 'C' },
                { 'id': '6569', 'tier': 'C' },
                { 'id': '128685', 'tier': 'C' },
                { 'id': '128684', 'tier': 'D' },
                { 'id': '102871', 'tier': 'D' },
                { 'id': '97338', 'tier': 'D' },
                { 'id': '73646', 'tier': 'D' }
            ]
        };

        $scope.carlN = {
            'name': 'Carl Newton',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '24502', 'tier': 'A' },
                { 'id': '21528', 'tier': 'B' },
                { 'id': '22405', 'tier': 'B' },
                { 'id': '25364', 'tier': 'C' },
                { 'id': '25369', 'tier': 'C' },
                { 'id': '19958', 'tier': 'C' },
                { 'id': '22371', 'tier': 'D' },
                { 'id': '36689', 'tier': 'D' },
                { 'id': '29670', 'tier': 'D' },
                { 'id': '40098', 'tier': 'D' }
            ]
        };

        $scope.callumN = {
            'name': 'Callum Newton',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '24502', 'tier': 'A' },
                { 'id': '28089', 'tier': 'B' },
                { 'id': '21528', 'tier': 'B' },
                { 'id': '24924', 'tier': 'C' },
                { 'id': '25369', 'tier': 'C' },
                { 'id': '28300', 'tier': 'C' },
                { 'id': '40058', 'tier': 'D' },
                { 'id': '1978', 'tier': 'D' },
                { 'id': '28923', 'tier': 'D' },
                { 'id': '22371', 'tier': 'D' }
            ]
        };

        $scope.kenB = {
            'name': 'Ken Bailey',
            'score': 0,
            'expanded': true,
            'picks': [
                { 'id': '25804', 'tier': 'A' },
                { 'id': '34046', 'tier': 'B' },
                { 'id': '21209', 'tier': 'B' },
                { 'id': '25396', 'tier': 'C' },
                { 'id': '25364', 'tier': 'C' },
                { 'id': '19958', 'tier': 'C' },
                { 'id': '10860', 'tier': 'D' },
                { 'id': '32139', 'tier': 'D' },
                { 'id': '25900', 'tier': 'D' },
                { 'id': '32200', 'tier': 'D' }
            ]
        };

        //$scope.shenanigans = [$scope.jeremyL, $scope.basilU, $scope.bradR, $scope.scottH, $scope.douglasB, $scope.brianO, $scope.carlN, $scope.kenB, $scope.callumN];
        $scope.shenanigans = [$scope.jeremyL, $scope.bradR, $scope.scottH, $scope.douglasB, $scope.brianO, $scope.basilU];

        $scope.scoresCallback = function (scores) {
            var fixedScores = scrubOpenData(scores);
            $scope.scores = fixedScores.homeScores;
            $scope.cutLine = '';
            $scope.cutPenalty = '';
            $scope.totalScore = 0;
            $scope.avgScore = 0;


            // Add data to each player for who has picked them
            for (var i = 0; i < $scope.scores.player.length; i++) {
                // British Open:  Top 70 Advance
                var position = $scope.scores.player[i].pos;
                if (position.substring(0, 1) == 'T')
                    position = parseInt(position.substring(1, position.length));

                if (position <= 70)
                    $scope.cutLine = $scope.scores.player[i].score;

                // British Open:  80th Percentile is position 124
                if (position > 123 && $scope.cutPenalty == '')
                    $scope.cutPenalty = $scope.scores.player[i].score;

                $scope.scores.player[i].pickedBy = "";
                $scope.scores.player[i].scoreKey = $scope.getScoreNumber($scope.scores.player[i].score);
                $scope.scores.player[i].todayKey = $scope.getScoreNumber($scope.scores.player[i].today);
                if (typeof $scope.scoreCache[$scope.scores.player[i].id] == 'undefined')
                    $scope.scores.player[i].status = 'scoreHold';
                else
                    $scope.scores.player[i].status = $scope.scoreCache[$scope.scores.player[i].id].status;
            }

            // Add a projected cut penalty
            // British open replaces rank with CUT -- fix it!
            $scope.cutPenalty = 8;
            for (var i = 0; i < $scope.scores.player.length; i++) {
                var position = $scope.scores.player[i].pos;
                if (position.substring(0, 1) == 'T')
                    position = parseInt(position.substring(1, position.length));

                if (position <= 70)
                    $scope.scores.player[i].cutPenalty = '';
                else
                    $scope.scores.player[i].cutPenalty = 2 * $scope.getScoreNumber($scope.cutPenalty);
                $scope.totalScore += $scope.getScoreNumber($scope.scores.player[i].score);
            }
            $scope.avgScore = Math.ceil($scope.totalScore / ($scope.scores.player.length - 2));

            for (var i = 0; i < $scope.shenanigans.length; i++) {
                var currentPerson = $scope.shenanigans[i];
                currentPerson.score = 0;
                currentPerson.base = 0;
                currentPerson.cutPenalty = 0;
                for (var j = 0; j < currentPerson.picks.length; j++) {
                    var currentPlayer = currentPerson.picks[j];
                    var info = $scope.matchPlayerInfo(currentPlayer.id, currentPerson.name);
                    currentPlayer.name = info.fName + ' ' + info.lName;
                    currentPlayer.score = info.score;
                    currentPlayer.today = info.today;
                    currentPlayer.thru = info.thru;
                    currentPlayer.status = info.status;
                    currentPlayer.scoreKey = $scope.getScoreNumber(info.score);
                    currentPlayer.cutPenalty = info.cutPenalty;
                    if (info.cutPenalty != '') {
                        currentPerson.scoreKey += $scope.getScoreNumber(info.score);
                        currentPerson.score += $scope.getScoreNumber(info.cutPenalty);
                        currentPerson.cutPenalty += $scope.getScoreNumber(info.cutPenalty);
                    }
                    var todayString = 'E';
                    if (currentPlayer.today == 'E' || currentPlayer.today.substring(0, 1) == '+' || currentPlayer.today.substring(0, 1) == '-') {
                        todayString = currentPlayer.today;
                    }
                    if (currentPlayer.score == 'E' || currentPlayer.score.substring(0, 1) == '+' || currentPlayer.score.substring(0, 1) == '-') {
                        currentPlayer.todayKey = $scope.getScoreNumber(todayString);
                        currentPerson.score += $scope.getScoreNumber(info.score);
                        currentPerson.base += (currentPlayer.scoreKey - currentPlayer.todayKey);
                    }

                    if (typeof $scope.scoreCache[info.id] == 'undefined') {
                        $scope.scoreCache[info.id] = { 'thru': info.thru, 'score': info.scoreKey, 'status': 'scoreHold' };
                    } else {
                        var cache = $scope.scoreCache[info.id];
                        if (info.thru != cache.thru) {
                            if (info.scoreKey > cache.score) {
                                cache.status = 'scoreIncrease';
                            } else if (info.scoreKey < cache.score) {
                                cache.status = 'scoreDecrease';
                            } else {
                                cache.status = 'scoreHold';
                            }
                            cache.thru = info.thru;
                            cache.score = info.scoreKey;
                        }
                    }
                }
            }

        };

        // British Open uses a different data provider -- scrub it to one we know how to work with
        function scrubOpenData(scores) {
            var result = {};
            result.homeScores = {};
            // Not actually using the global round anywhere
            result.homeScores.round = "TBD";
            result.homeScores.player = [];
            var lastPos = scores.aaData[0].Position.SortValue;
            for (var i = 0; i < scores.aaData.length; i++) {
                var newPlayer = {};
                newPlayer.pos = scores.aaData[i].Position.DisplayValue;
                if (newPlayer.pos == 'CUT') {
                    newPlayer.pos = "" + scores.aaData[i].Position.SortValue;
                }
                
                newPlayer.dName = scores.aaData[i].Name;
                newPlayer.fName = scores.aaData[i].Name.split(",")[1];
                newPlayer.lName = scores.aaData[i].Name.split(",")[0];
                newPlayer.id = scores.aaData[i].ID;
                newPlayer.score = scores.aaData[i].ToPar;
                newPlayer.today = scores.aaData[i].Today;
                newPlayer.thru = scores.aaData[i].Hole;
                newPlayer.order = scores.aaData[i].R1 + "|" + scores.aaData[i].R2 + "|" + scores.aaData[i].R3 + "|" + scores.aaData[i].R4;
                newPlayer.live = "f";

                if (newPlayer.score == "PAR")
                    newPlayer.score = "E";
                if (newPlayer.total == "PAR")
                    newPlayer.total = "E";
                if (newPlayer.today == "PAR")
                    newPlayer.today = "E";

                result.homeScores.player.push(newPlayer);
            }
            return result;
        };

        $scope.getDelta = function (person) {
            var delta = person.score - person.base - person.cutPenalty;
            var value = "";
            if (delta > 0)
                value = "+" + delta;
            else if (delta == 0)
                value = "E";
            else
                value = delta;

            return value;
        };

        $scope.setExpanded = function (value) {
            for (var i = 0; i < $scope.shenanigans.length; i++)
                $scope.shenanigans[i].expanded = value;
        };

        $scope.getScoreNumber = function (scoreString) {
            if (scoreString == 'E' || scoreString == '')
                return 0;
            else
                return parseInt(scoreString);
        };

        $scope.matchPlayerInfo = function (id, pickedBy) {
            for (var i = 0; i < $scope.scores.player.length; i++) {
                if (id == $scope.scores.player[i].id) {
                    if ($scope.scores.player[i].pickedBy.indexOf(pickedBy) == -1) {
                        if ($scope.scores.player[i].pickedBy.length > 0)
                            $scope.scores.player[i].pickedBy += ", ";
                        $scope.scores.player[i].pickedBy += pickedBy;
                    }

                    var result = $scope.scores.player[i];
                    if (result.score == '')
                        result.scoreKey = 0;
                    if (result.thru == '')
                        result.thruKey = 0;

                    return result;
                }
            }

            return { name: '', score: '', thru: '', today: '', status: 'scoreHold' };
        };

        $scope.loadData = function () {
            $http.get(base_url + '/api/scoreboard/britishopen/2014').success($scope.scoresCallback);
        };

        $scope.refreshingIn = function () {
            if ($scope.refresh == 0) {
                $scope.refresh = 30;
                $scope.loadData();
            } else
                $scope.refresh = $scope.refresh - 1;

            $scope.$apply($scope.refresh);
        };

        $scope.setPlayerSort = function (sort) {
            if (sort == 'default') {
                $scope.playerReverse = false;
                $scope.playerPredicate = 'scoreKey';
            } else if (sort == $scope.playerPredicate) {
                $scope.playerReverse = !$scope.playerReverse;
            } else {
                $scope.playerReverse = false;
                $scope.playerPredicate = sort;
            }
        };

        $scope.loadData();

        setInterval($scope.refreshingIn, 1000);
    });


</script>

